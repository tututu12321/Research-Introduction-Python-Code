from sklearn.metrics import confusion_matrix, accuracy_score, recall_score, precision_score, f1_score
from sklearn.model_selection import train_test_split
from sklearn.datasets import make_classification
from sklearn.ensemble import RandomForestClassifier

# 1. データセットの作成
X, y = make_classification(n_samples=500, n_features=5, n_classes=2, random_state=42)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 2. モデルのトレーニング
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# 3. 混同行列の計算
cm = confusion_matrix(y_test, y_pred)
A = cm[0, 0]  # True Positive for Class 0
B = cm[0, 1]  # False Negative for Class 0
C = cm[1, 0]  # False Positive for Class 1
D = cm[1, 1]  # True Positive for Class 1

print("Confusion Matrix:")
print(cm)

# 4. 指標の計算
# Accuracy (正解率)
accuracy = accuracy_score(y_test, y_pred)

# Recall (再現率)
recall_class_0 = A / (A + B) if (A + B) != 0 else 0
recall_class_1 = D / (C + D) if (C + D) != 0 else 0

# Precision (適合率)
precision_class_0 = A / (A + C) if (A + C) != 0 else 0
precision_class_1 = D / (B + D) if (B + D) != 0 else 0

# F-Measure (F1スコア)
f1_class_0 = (2 * recall_class_0 * precision_class_0) / (recall_class_0 + precision_class_0) if (recall_class_0 + precision_class_0) != 0 else 0
f1_class_1 = (2 * recall_class_1 * precision_class_1) / (recall_class_1 + precision_class_1) if (recall_class_1 + precision_class_1) != 0 else 0

# 5. 結果の表示
print("\nEvaluation Metrics:")
print(f"Accuracy: {accuracy:.4f}")
print(f"Recall (Class 0): {recall_class_0:.4f}, Recall (Class 1): {recall_class_1:.4f}")
print(f"Precision (Class 0): {precision_class_0:.4f}, Precision (Class 1): {precision_class_1:.4f}")
print(f"F1-Score (Class 0): {f1_class_0:.4f}, F1-Score (Class 1): {f1_class_1:.4f}")

# 全体の平均指標
recall_avg = recall_score(y_test, y_pred, average="macro")
precision_avg = precision_score(y_test, y_pred, average="macro")
f1_avg = f1_score(y_test, y_pred, average="macro")

print(f"\nOverall Metrics (Macro Average):")
print(f"Average Recall: {recall_avg:.4f}")
print(f"Average Precision: {precision_avg:.4f}")
print(f"Average F1-Score: {f1_avg:.4f}")
